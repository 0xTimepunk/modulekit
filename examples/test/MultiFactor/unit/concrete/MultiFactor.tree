MultiFactor::onInstall
├── when module is intialized
│   └── it should revert
└── when module is not intialized
    ├── when threshold is 0
    │   └── it should revert
    └── when threshold is not 0
        ├── it should set the threshold
        ├── when owners length is less than threshold
        │   └── it should revert
        └── when owners length is not less than threshold
            ├── when owners include 0 address
            │   └── it should revert
            ├── when owners include duplicates
            │   └── it should set only unique owners
            └── when owners include no duplicates
                └── it should set all owners
     

MultiFactor::onUninstall
├── it should remove all owners
└── it should set threshold to 0


MultiFactor::isInitialized
├── when module is not intialized
│   └── it should return false
└── when module is intialized
    └── it should return true


MultiFactor::setThreshold
├── when module is not intialized
│   └── it should revert
└── when module is intialized
    ├── when threshold is 0
    │   └── it should revert
    └── when threshold is not 0
        ├── when threshold is higher than owners length
        │   └── it should revert
        └── when threshold is not higher than owners length
            └── it should set the threshold


MultiFactor::addOwner
├── when module is not intialized
│   └── it should revert
└── when module is intialized
    ├── when owner is 0 address
    │   └── it should revert
    ├── when owner is already added
    │   └── it should revert
    └── when owner is not added
        └── it should add the owner


MultiFactor::removeOwner
├── when module is not intialized
│   └── it should revert
└── when module is intialized
    └── it should remove the owner


MultiFactor::getOwners
└── it should get all owners


MultiFactor::validateUserOp
├── when threshold is not set
│   └── it should return 1
└── when threshold is set
    ├── when the signatures are not valid
    │   └── it should return 1
    └── when the signatures are valid
        ├── when the unique signatures are less than threshold
        │   └── it should return 1
        └── when the unique signatures are greater than threshold
            └── it should return 0


MultiFactor::isValidSignatureWithSender
├── when threshold is not set
│   └── it should revert
└── when threshold is set
    ├── when the signatures are not valid
    │   └── it should return EIP1271_FAILED
    └── when the signatures are valid
        ├── when the unique signatures are less than threshold
        │   └── it should return EIP1271_FAILED
        └── when the unique signatures are greater than threshold
            └── it should return ERC1271_MAGIC_VALUE


MultiFactor::name
└── it should return MultiFactor


MultiFactor::version
└── it should return 1.0.0


MultiFactor::isModuleType
├── when typeID is 1
│   └── it should return true
├── when typeID is 2
│   └── it should return true
└── when typeID is not 1 or 2
    └── it should return false